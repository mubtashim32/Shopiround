@model Product
@{
    var CartCount = ViewBag.CartCount;
    var AlreadyInCart = ViewBag.AlreadyInCart;
}

<style>
    a {
        text-decoration: none;
        color: black;
        text-decoration: underline;
    }

    #map {
        height: 250px;
        width: 100%;
    }

    .starIcon {
        height: 25px;
        width: 25px;
    }

    .starIcon2 {
        height: 10px;
        width: 10px;
        padding-right: 2px;
    }
</style>
<a class="row ps-3 text-decoration-underline" asp-area="Shopkeeper" asp-controller="Shop" asp-action="Profile">
    @Model.Shop.ShopName
</a>
<div class="row fw-bold ps-3">
    @Model.Name
</div>
<div class="row ps-1 pe-2">
    <div class="col-6">
        <span class="fw-bold h5">BDT @Model.Price.00</span>
        <span>-@Model.DiscountAmount.00</span>
    </div>
    <div class="col-6">
        <div class="float-end fw-bold" id="distance">
        </div>
    </div>
</div>
<div class="row m-2 border">
    <img src="@Model.ImageURL" />
</div>
<div class="d-flex justify-content-center align-items-center">
    <div class="border border-3 me-1" onclick="decQ()">
        <img src="/images/assets/minus.png" style="height: 40px;"/>
    </div>
    <div>
        <input id="quantity" class="d-flex text-center form-control" type="number" style="height: 45px; width: 100px; font-size: 30px;" onchange="cngQ()" value="1"/>
    </div>
    <div class="border border-3 ms-1" onclick="incQ()">
        <img src="/images/assets/plus.png" style="height: 40px;" />
    </div>
</div>
<div class="d-flex justify-content-around m-3">
    @if (Model.Shop.AcceptOnlineOrders)
    {
        <div onclick="addToOnlineCart()" id="addToOnlineCartBtn" class="btn btn-primary" style="font-size: 18px; box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;">Order Online</div>
    }
    <div onclick="addToCart()" class="btn btn-primary addToCartBtn" style="font-size: 18px; box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;">Add to Cart</div>
</div>
<div class="row p-1">
    <i class="bi bi-shop"> @Model.Shop.Address</i>
</div>

<div class="row p-2 align-content-center fs-5 mb-2" style="background-color: #ECEFF1; height: 50px;">
    <div class="col-6 align-content-center">Location</div>
    <div class="col-6 align-content-center">
        <a class="float-end text-decoration-none text-info" data-bs-toggle="collapse" href="#collapseExample" role="button" aria-expanded="false" aria-controls="collapseExample">
            +
        </a>
    </div>
</div>
<div class="collapse" id="collapseExample">
    <div class="card card-body">
        <div id="map"></div>
    </div>
</div>
<div class="row p-2 align-content-center fs-5 mb-2" style="background-color: #ECEFF1; height: 50px;">
    <div class="col-6 align-content-center">Description</div>
    <div class="col-6 align-content-center">
        <a class="float-end text-decoration-none text-info" data-bs-toggle="collapse" href="#collapseExample2" role="button" aria-expanded="false" aria-controls="collapseExample">
            +
        </a>
    </div>
</div>
<div class="collapse" id="collapseExample2">
    @Model.Description
</div>
<div class="row p-2">
    <div class="fs-5">Rate this product</div>
    <div>Tell others what you think</div>
    <div class="d-flex justify-content-around p-3">
        <div onclick="writeReview(1)"><img class="starIcon" src="/images/assets/startBlack.png" id="star1" /></div>
        <div onclick="writeReview(2)"><img class="starIcon" src="/images/assets/startBlack.png" id="star2" /></div>
        <div onclick="writeReview(3)"><img class="starIcon" src="/images/assets/startBlack.png" id="star3" /></div>
        <div onclick="writeReview(4)"><img class="starIcon" src="/images/assets/startBlack.png" id="star4" /></div>
        <div onclick="writeReview(5)"><img class="starIcon" src="/images/assets/startBlack.png" id="star5" /></div>
    </div>
    <div class="text-primary text-decoration-none" onclick="writeReview()">Write a review</div>
    <div id="writeReview"></div>
</div>
<div class="row p-2 align-content-center fs-5 mb-2" style="background-color: #ECEFF1; height: 50px;">
    <div class="col-6 align-content-center">Reviews</div>
    <div class="col-6 align-content-center">
        <a class="float-end text-decoration-none text-info" data-bs-toggle="collapse" href="#collapseExample1" role="button" aria-expanded="false" aria-controls="collapseExample">
            +
        </a>
    </div>
</div>
<div class="collapse" id="collapseExample1">
    @{
        foreach (var review in Model.Reviews)
        {
                            <div class="card card-body">
                                <div>@review.Reviewer</div>
                                <div class="d-flex">
                                    @for (int i = 1; i <= 5; ++i)
                    {
                        if (@review.Rating >= i)
                        {
                                            <div><img class="starIcon2" src="/images/assets/starYellow.png" /></div>
                        }
                        else
                        {
                                            <div><img class="starIcon2" src="/images/assets/startBlack.png" /></div>
                        }
                    }

                                </div>
                                <div>@review.Text</div>
                            </div>
        }
    }

</div>
</div>
<div style="margin-bottom: 70px;"></div>
<div style="height: 70px;" class="ps-3 pe-3 d-flex justify-content-between align-items-center border border-2 position-fixed bottom-0 w-100 bg-white">
    <a asp-area="User" asp-controller="Chat" asp-action="Home" asp-route-ownerId="@Model.Shop.ApplicationUserId" asp-route-productId="@Model.Id"><i style="font-size: 30px;" class="bi bi-chat-left-dots"></i></a>
    <div id="totalPrice" class="fw-bold fs-5">BDT @Model.Price.00</div>
    <div class="fs-5 btn btn-primary rounded-pill ps-3 pe-3 addToCartBtn" onclick="addToCart()">Add to cart</div>
@*     @if (Model.Shop.AcceptOnlineOrders)
    {
        <div class="fs-5 btn btn-primary rounded-pill ps-3 pe-3" onclick="addToOnlineCart()" id="addToOnlineCartBtn">Online cart</div>
    } *@
</div>


<script type="text/javascript">

    var quantityDiv = document.getElementById("quantity");
    var x = "@AlreadyInCart";
    

    if (x == "True") {
        quantityDiv.value = @CartCount;
        var addToCartBtn = document.getElementsByClassName("addToCartBtn");
        for (let i = 0; i < addToCartBtn.length; ++i) {
            addToCartBtn[i].innerHTML = "Update Cart";
        }
    }


    var distanceText = document.getElementById("distance");
    
    var addToOnlineCartBtn = document.getElementById("addToOnlineCartBtn");

    
    var totalPriceDiv = document.getElementById("totalPrice");
    var quantityAvailable = @Model.Quantity;
    var quantityOrdered = @CartCount;
    var price = @Model.Price;

    function incQ() {
        quantityOrdered = Math.min(quantityOrdered + 1, quantityAvailable);
        quantityDiv.value = quantityOrdered;
        totalPriceDiv.innerHTML = "BDT "+ quantityOrdered * price + ".00";
    }

    function decQ() {
        quantityOrdered = Math.max(quantityOrdered - 1, 1);
        quantityDiv.value = quantityOrdered;
        totalPriceDiv.innerHTML = "BDT " + quantityOrdered * price + ".00";
    }

    function cngQ() {
        quantityOrdered = Math.min(quantityDiv.value, quantityAvailable);
        quantityOrdered = Math.max(quantityOrdered, 1);
        quantityDiv.value = quantityOrdered;
        totalPriceDiv.innerHTML = "BDT " + quantityOrdered * price + ".00";
    }

    var map = L.map('map');
    var markerUser, markerShop;
    var latitudeUser, longitudeUser;
    var latitudeShop = @Model.Shop.Latitude;
    var longitudeShop = @Model.Shop.Longitude;
    console.log(`LatitudeShop: ${latitudeShop}, longitude: ${longitudeShop}`);

    L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {
        maxZoom: 19,
        attribution: '&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>'
    }).addTo(map);

    if ("geolocation" in navigator) {
        navigator.geolocation.getCurrentPosition(
            (position) => {
                latitudeUser = position.coords.latitude;
                longitudeUser = position.coords.longitude;
                console.log(`Latitude: ${latitudeUser}, longitude: ${longitudeUser}`);

                markerUser = L.marker([latitudeUser, longitudeUser]).addTo(map);
                fetch(`https://api.geoapify.com/v1/routing?waypoints=${latitudeShop},${longitudeShop}|${latitudeUser},${longitudeUser}&mode=drive&apiKey=a63091f5968a473c88c4c923004de755`)
                    .then(response => response.json())
                    .then(result => {
                        console.log(result);
                        var distance = result["features"][0]["properties"]["distance"];
                        distanceText.innerHTML = distance + "meter";
                        console.log(distance);
                    })
                    .catch(error => console.log('error', error));
                // ***********

            },
            (error) => {
                //console.error("Error getting user location:", error);
            }
        );
    } else {
        //console.error("Geolocation is not supported by this browser.");
    }

    map.setView([latitudeShop, longitudeShop], 15);
    markerShop = L.marker([latitudeShop, longitudeShop]).addTo(map);

    const myCollapsible = document.getElementById('collapseExample')
    myCollapsible.addEventListener('shown.bs.collapse', event => {
        map.invalidateSize(true);
    })


    let reviewBox = document.getElementById("writeReview");
    var yellow = -1;
    let star1 = document.getElementById("star1");
    let star2 = document.getElementById("star2");
    let star3 = document.getElementById("star3");
    let star4 = document.getElementById("star4");
    let star5 = document.getElementById("star5");
    function writeReview(x) {
        if (x > yellow) {
            if (x >= 1) star1.src = "/images/assets/starYellow.png";
            if (x >= 2) star2.src = "/images/assets/starYellow.png";
            if (x >= 3) star3.src = "/images/assets/starYellow.png";
            if (x >= 4) star4.src = "/images/assets/starYellow.png";
            if (x >= 5) star5.src = "/images/assets/starYellow.png";

        } else if (x < yellow) {
            if (x < 1) star1.src = "/images/assets/startBlack.png";
            if (x < 2) star2.src = "/images/assets/startBlack.png";
            if (x < 3) star3.src = "/images/assets/startBlack.png";
            if (x < 4) star4.src = "/images/assets/startBlack.png";
            if (x < 5) star5.src = "/images/assets/startBlack.png";
        }
        if (yellow == -1) {
            reviewBox.innerHTML = "<div class='pt-2 form-floating'><textarea id='reviewBox' class='form-control' asp-for='Description' placeholder='Leave a comment here' style='height: 100px;'></textarea><label asp-for='Description'>Description</label></div><div id='btnSave' class='pt-2 pe-2 float-end text-primary text-decoration-none' onclick='postReview()'>Post</div>";
        }
        yellow = x;
    }
    function postReview() {
        var productId = @Model.Id;
        var reviewText = document.getElementById('reviewBox').value;
        $.ajax({
            type: "POST",
            url: "@Url.Action("CreateReview")",
            dataType: "json",
            data: { ProductId: productId, ReviewText: reviewText, Rating: yellow },
            success: function (result) {
                console.log(result);
                location.reload();
            },
            error: function (req, status, error) {
                console.log(status);
            }
        });
    }
    function addToCart() {
        var productId = @Model.Id;
        var quantity = document.getElementById('quantity').value;
        $.ajax({
            type: "POST",
            url: "@Url.Action("CreateCartItem")",
            dataType: "json",
            data: { ProductId: productId, Quantity: quantity },
            success: function (result) {
                console.log(result);
                var addToCartBtn = document.getElementsByClassName("addToCartBtn");
                for (let i = 0; i < addToCartBtn.length; ++i) {
                    addToCartBtn[i].innerHTML = "Cart Updated";
                }
            },
            error: function (req, status, error) {
                console.log(status);
            }
        });
    }

    function disbaleCartBtn() { 
        var addToCartBtn = document.getElementById("addToCartBtn");
        addToCartBtn.innerHTML = "Product added";
        button.disabled = true;
    }

    function addToOnlineCart() {
        var productId = @Model.Id;
        $.ajax({
            type: "POST",
            url: "@Url.Action("OnlineCartItem")",
            dataType: "json",
            data: { ProductId: productId },
            success: function (result) {
                console.log(result);
                addToOnlineCartBtn.innerHTML = "Product added";
                disbaleCartBtn();
            },
            error: function (req, status, error) {
                console.log(status);
            }
        });
    }

    function qunatityCheck(itemId, available) {
        var quantity = document.getElementById('quantity');

        if (quantity.value > available) {
            quantity.value = available;
        }
        else if (quantity.value < 1) {
            quantity.value = 1;
        }

    }

    function incrementQuantity(available) {
        var inputField = document.getElementById('quantity');
        var currentValue = parseInt(inputField.value);
        if (!isNaN(currentValue)) {
            if (currentValue < available) {
                inputField.value = currentValue + 1;

            }

        } else {
            inputField.value = 1; // Set default value if current value is NaN or empty

        }
    }

    function decrementQuantity(available) {
        var inputField = document.getElementById('quantity');
        var currentValue = parseInt(inputField.value);
        if (!isNaN(currentValue) && currentValue > 1) {
            if (currentValue > 1) {
                inputField.value = currentValue - 1;
            }

        } else {
            inputField.value = 1; // Set default value if current value is NaN, empty, or less than 1

        }
    }

</script>
