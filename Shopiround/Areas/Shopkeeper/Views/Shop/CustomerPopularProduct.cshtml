@using Shopiround.Models.Statistics;
@model List<Product>
@{
    int i = 0;
    //int no_product = 1;
    //List<ProductCount> popularProducts = ViewData["ProductCount"] as List<ProductCount>;
}

<style>
    .productImage {
        height: 150px;
        width: 100%;
    }

    .productName {
        font-size: 14px;
        line-height: 14px;
        font-weight: 500;
    }

    .productPrice {
        font-size: 16px;
        line-height: 16px;
        font-weight: 700;
    }

    .shopInfo {
        font-size: 12px;
        line-height: 12px;
        font-weight: 400;
    }

    a {
        text-decoration: none;
        color: black;
    }

    .cat {
        height: 50px;
        width: 50px;
        border-radius: 50%;
    }
</style>
<div style="font-size: 1.4rem; float: right; font-weight: 600;"><img src="~/images/assets/item.png" style="height: 30px" />Popular Products</div>
<div class="clearfix"></div>
<div class="row mt-2">
    @foreach (var item in Model)
    {
        string distanceId = "distance" + i.ToString();
        <div class="col-6 Search mt-2" data-product-id="@item.Id" data-product-name="@item.Name">
            <a href="@Url.Action("Show", "Product", new { area = "Shopkeeper",  Id = item.Id })">
                <div class="border border-2 rounded-3 p-1">
                    <img class="productImage" src="@item.ImageURL" />
                </div>
                <div class="p-1">
                    <div class="productName mt-1">@item.Name</div>
                    <div class="productPrice mt-1">BDT @item.Price.00</div>
                    <div class="shopInfo mt-1">@item.Shop.ShopName<span id="@distanceId"></span></div>
                    <div></div>
                </div>
            </a>
        </div>
        ++i;
    }
</div>

<script>
    var products = @Html.Raw(Json.Serialize(Model));
    var latitudeUser, longitudeUser;
    var latitudeShop, longitudeShop;
    var cnt = 0;
    if ("geolocation" in navigator) {
        navigator.geolocation.getCurrentPosition(
            (position) => {
                latitudeUser = position.coords.latitude;
                longitudeUser = position.coords.longitude;
                console.log(`Latitude: ${latitudeUser}, longitude: ${longitudeUser}`);
                for (idx in products) {

                    latitudeShop = products[idx]["shop"]["latitude"];
                    longitudeShop = products[idx]["shop"]["longitude"];
                    console.log(idx);
                    fetch(`https://api.geoapify.com/v1/routing?waypoints=${latitudeShop},${longitudeShop}|${latitudeUser},${longitudeUser}&mode=drive&apiKey=a63091f5968a473c88c4c923004de755`)
                        .then(response => response.json())
                        .then(result => {

                            var distance = result["features"][0]["properties"]["distance"];
                            var unit = "m";
                            if (distance >= 1000) {
                                distance /= 1000;
                                unit = "km";
                            }
                            var distanceText = document.getElementById("distance" + cnt);
                            distanceText.innerHTML = "(" + distance + unit + ")";
                            console.log(distance);
                            ++cnt;
                        })
                        .catch(error => console.log('error', error));

                }


            },
            (error) => {
                console.error("Error getting user location:", error);
            }
        );
    } else {
        console.error("Geolocation is not supported by this browser.");
    }
</script>

