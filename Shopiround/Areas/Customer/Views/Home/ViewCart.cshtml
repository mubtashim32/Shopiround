@model List<CartItem>
@{
    int totalPrice = 0;
}
<style>
    .productImage {
        height: 30vw;
        width: 30vw;
    }

</style>
<div class="pt-1">
    <div class="d-flex align-items-center" style="font-size: 1.4rem;float: right; font-weight: 600;">
        <img src="~/images/assets/cart.png" style="height: 30px" />
        <div>Shopping Cart</div>
    </div>

    <div class="clearfix"></div>
    <hr />
    <div>
        @foreach (var cartItem in Model)
        {
            int ind_price = (int)cartItem.Product.Price * cartItem.Quantity;
            totalPrice += ind_price;
            <div class="d-flex mb-2 border border-1 p-2 rounded" style="background-color: #F1F5F9; position: relative;">
                <div class="me-2 rounded overflow-hidden">
                    <img class="productImage" src="@cartItem.Product.ImageURL" />
                </div>
                <div class="position-relative" style="width: calc(100% - 100px);">
                    <div style="width: 100%" class="">
                        <div style="font-size: 14px;
                            line-height: 16px;
                            font-weight: 500;
                            display: -webkit-box;
                            -webkit-box-orient: vertical;
                            -webkit-line-clamp: 1;
                            overflow: hidden;">
                            @cartItem.Product.Name
                        </div>
                        <div style="font-size: 16px;
                            line-height: 24px;
                            font-weight: 700;">
                            <span id="price_@cartItem.Id" style="color: #2A8703">৳@ind_price.00</span>
                        </div>
                        <div style="font-size: 13px;
                            line-height: 13px;
                            font-weight: 400;">
                            <i class="bi bi-geo-alt-fill"></i>
                            <a class="text-black" href="/">@cartItem.Product.Shop.ShopName</a>
                        </div>
                    </div>
                    <div class="d-flex mt-3 position-absolute bottom-0">
                        <a asp-area="Customer" asp-controller="Home" asp-action="DeleteCartItem" asp-route-id="@cartItem.Id" class="btn btn-light rounded p-1 ps-2 pe-2 border me-2" style="background-color: #E2E8F0; box-shadow: rgba(50, 50, 93, 0.25) 0px 1px 5px -1px, rgba(0, 0, 0, 0.3) 0px 0.5px 3px -1px;">Delete</a>
                        <a class="btn btn-light rounded p-1 ps-2 pe-2 border" style="background-color: #E2E8F0; box-shadow: rgba(50, 50, 93, 0.25) 0px 1px 5px -1px, rgba(0, 0, 0, 0.3) 0px 0.5px 3px -1px;">Save for later</a>
                    </div>
                </div>
                <div class="position-relative" style="width: 60px;">
                    <div>
                        <input id="quantity_@cartItem.Id" class="d-flex text-center form-control" type="number" style="height: 30px; width: 60px; font-size: 20px;" onchange="cngQ(@cartItem.Id)" value="@cartItem.Quantity" />
                    </div>
                    <div class="d-flex justify-content-between mt-1" style="width: 60px;">
                        <div class="border border-3 me-1 rounded" onclick="decQ(@cartItem.Id)">
                            <img src="/images/assets/minus.png" style="height: 23px;" />
                        </div>
                        <div class="border border-3 ms-1 rounded" onclick="incQ(@cartItem.Id)">
                            <img src="/images/assets/plus.png" style="height: 23px;" />
                        </div>
                    </div>
                </div>
            </div>
        }

    </div>
</div>
</div>
<div style="margin-bottom: 60px;"></div>
<div style="height: 65px;" class="ps-3 pe-3 d-flex justify-content-between align-items-center border border-2 position-fixed bottom-0 w-100 bg-white">
    <div>
        <div class="fw-bold fs-5">Total Price: <span id="totalPrice" style="color: #00796B">৳@totalPrice.00</span></div>
        <div class="fw-bold fs-5">Est. Distance: <span id="totalDistance" style="color: #00796B">...</span></div>
    </div>

    <a asp-area="Customer" asp-controller="Home" asp-action="ShowRoute" style="box-shadow: rgba(60, 64, 67, 0.3) 0px 1px 2px 0px, rgba(60, 64, 67, 0.15) 0px 1px 3px 1px;" class="fs-5 btn btn-primary rounded-pill ps-3 pe-3" id="checkoutBtn">Checkout</a>
</div>
<script>
    // product quantity and price
    var productQ = new Map();
    var productP = new Map()
    var quantityA = new Map();

    var totalPriceSpan = document.getElementById("totalPrice");
    var totalPrice = 0;

    function incQ(c_Id) {
        totalPrice -= productQ.get(c_Id) * productP.get(c_Id);

        var quantityOrdered = productQ.get(c_Id);
        var quantityAvailable = quantityA.get(c_Id);
        quantityOrdered = Math.min(quantityOrdered + 1, quantityAvailable);
        productQ.set(c_Id, quantityOrdered);
        document.getElementById("quantity_" + c_Id).value = quantityOrdered;
        document.getElementById("price_" + c_Id).innerHTML = "৳" + productQ.get(c_Id) * productP.get(c_Id) + ".00";

        totalPrice += productQ.get(c_Id) * productP.get(c_Id);
        totalPriceSpan.innerHTML = "৳" + totalPrice + ".00";
    }

    function decQ(c_Id) {
        totalPrice -= productQ.get(c_Id) * productP.get(c_Id);

        var quantityOrdered = productQ.get(c_Id);
        var quantityAvailable = quantityA.get(c_Id);
        quantityOrdered = Math.max(quantityOrdered - 1, 1);
        productQ.set(c_Id, quantityOrdered);
        document.getElementById("quantity_" + c_Id).value = quantityOrdered;
        document.getElementById("price_" + c_Id).innerHTML = "৳" + productQ.get(c_Id) * productP.get(c_Id) + ".00";

        totalPrice += productQ.get(c_Id) * productP.get(c_Id);
        totalPriceSpan.innerHTML = "৳" + totalPrice + ".00";
    }

    function cngQ(c_Id) {
        totalPrice -= productQ.get(c_Id) * productP.get(c_Id);

        var quantityOrdered = productQ.get(c_Id);
        var quantityAvailable = quantityA.get(c_Id);
        quantityOrdered = Math.min(document.getElementById("quantity_" + c_Id).value, quantityAvailable);
        quantityOrdered = Math.max(quantityOrdered, 1);
        productQ.set(c_Id, quantityOrdered);
        document.getElementById("quantity_" + c_Id).value = quantityOrdered;
        document.getElementById("price_" + c_Id).innerHTML = "৳" + productQ.get(c_Id) * productP.get(c_Id) + ".00";

        totalPrice += productQ.get(c_Id) * productP.get(c_Id);
        totalPriceSpan.innerHTML = "৳" + totalPrice + ".00";
    }
    var cartItems = @Html.Raw(Json.Serialize(Model));

    for (idx in cartItems) {
        var c_Id = cartItems[idx]["id"];
        var p_p = cartItems[idx]["product"]["price"];
        var p_q = cartItems[idx]["quantity"];
        var q_a = cartItems[idx]["product"]["quantity"];

        productQ.set(c_Id, p_q);
        productP.set(c_Id, p_p);
        quantityA.set(c_Id, q_a);

        totalPrice += productQ.get(c_Id) * productP.get(c_Id);
    }
    totalPriceSpan.innerHTML = "৳" + totalPrice + ".00";

    // calculating total distance
    var totalDistanceSpan = document.getElementById("totalDistance");
    var userLat, userLng;
    let locations = new Array();
    if ("geolocation" in navigator) {
        navigator.geolocation.getCurrentPosition(
            (position) => {
                var lat = position.coords.latitude;
                var lng = position.coords.longitude;
                userLat = lat, userLng = lng;
                let location = [lng, lat];
                locations.push({ "location": location });
                for (idx in cartItems) {
                    totalPrice += cartItems[idx]["product"]["price"];
                    location = [
                        cartItems[idx]["product"]["shop"]["longitude"],
                        cartItems[idx]["product"]["shop"]["latitude"]
                    ]
                    locations.push({ "location": location });
                }
                var routingMatrix = [];
                const MAX = 1e9;
                const N = locations.length;
                var memo = [];
                var last = [];
                for (var i = 0; i < N; ++i) {
                    memo[i] = [];
                    last[i] = [];
                    for (var j = 0; j < (1 << N); ++j) {
                        memo[i][j] = 0;
                        last[i][j] = -1;
                    }
                }
                function tsp(i, mask) {
                    if (mask == ((1 << i) | 1)) {
                        var _mask = mask & (~(1 << i))
                        last[i][_mask] = 0;
                        return routingMatrix[0][i];
                    }
                    if (memo[i][mask] != 0) {
                        return memo[i][mask];
                    }
                    var res = MAX;
                    for (var j = 0; j < N; ++j) {
                        if ((mask & (1 << j)) && j != i && j != 0) {
                            var _mask = mask & (~(1 << i))
                            var temp = tsp(j, _mask) + routingMatrix[j][i];
                            if (res > temp) {
                                res = temp;
                                last[i][_mask] = j;
                            }
                        }
                    }
                    return memo[i][mask] = res;
                }
                const body = {
                    "mode": "drive",
                    "sources": locations,
                    "targets": locations
                };
                fetch('https://api.geoapify.com/v1/routematrix?apiKey=65c669784b2d4fe897f94046acc1a94d', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(body)
                })
                    .then(res => res.json())
                    .then(res => {
                        for (var i = 0; i < N; ++i) {
                            routingMatrix[i] = [];
                            for (var j = 0; j < N; ++j) {
                                routingMatrix[i][j] = res["sources_to_targets"][i][j]["distance"];
                            }
                        }
                        var ans = MAX;
                        var lastIdx = -1;
                        for (var i = 0; i < N; ++i) {
                            var mask = (1 << N) - 1;
                            var temp = tsp(i, mask) + routingMatrix[i][0];
                            if (ans > temp) {
                                ans = temp;
                                lastIdx = i;
                            }
                        }
                        //console.log(ans);
                        var unit = "m";
                        if (ans >= 1000) {
                            ans /= 1000;
                            unit = "km";
                        }
                        totalDistanceSpan.innerHTML = ans + unit;
                    });
            },
            (error) => {
            }
        );
    }
    else {
        console.error("Geolocation is not supported by this browser.");
    }
</script>

