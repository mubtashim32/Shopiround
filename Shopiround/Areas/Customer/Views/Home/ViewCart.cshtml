@model List<CartItem>
@{
    int totalPrice = 0;
}
<style>
    .productImage {
        height: 30vw;
        width: 30vw;
    }

</style>
<div class="pt-1">
    <div class="d-flex align-items-center" style="font-size: 1.4rem;float: right; font-weight: 600;">
        <img src="~/images/assets/cart.png" style="height: 30px" />
        <div>Shopping Cart</div>
    </div>

    <div class="clearfix"></div>
    <hr />
    <div>
        @foreach (var cartItem in Model)
        {
            int ind_price = (int)cartItem.Product.Price * cartItem.Quantity;
            totalPrice += ind_price;
            <div class="d-flex mb-2 border border-1 p-2 rounded" style="background-color: #F1F5F9; position: relative;">
                <div class="me-2 rounded overflow-hidden">
                    <img class="productImage" src="@cartItem.Product.ImageURL" />
                </div>
                <div class="position-relative" style="width: calc(100% - 100px);">
                    <div style="width: 100%" class="">
                        <div style="font-size: 14px;
                            line-height: 16px;
                            font-weight: 500;
                            display: -webkit-box;
                            -webkit-box-orient: vertical;
                            -webkit-line-clamp: 1;
                            overflow: hidden;">
                            @cartItem.Product.Name
                        </div>
                        <div style="font-size: 16px;
                            line-height: 24px;
                            font-weight: 700;">
                            <span id="price_@cartItem.Product.Id" style="color: #2A8703">৳@ind_price.00</span>
                        </div>
                        <div style="font-size: 13px;
                            line-height: 13px;
                            font-weight: 400;">
                            <i class="bi bi-geo-alt-fill"></i>
                            <a class="text-black" href="/">@cartItem.Product.Shop.ShopName</a>
                        </div>
                    </div>
                    <div class="d-flex mt-3 position-absolute bottom-0">
                        <a asp-area="Customer" asp-controller="Home" asp-action="DeleteCartItem" asp-route-id="@cartItem.Id" class="btn btn-light rounded p-1 ps-2 pe-2 border me-2" style="background-color: #E2E8F0; box-shadow: rgba(50, 50, 93, 0.25) 0px 1px 5px -1px, rgba(0, 0, 0, 0.3) 0px 0.5px 3px -1px;">Delete</a>
                        <a class="btn btn-light rounded p-1 ps-2 pe-2 border" style="background-color: #E2E8F0; box-shadow: rgba(50, 50, 93, 0.25) 0px 1px 5px -1px, rgba(0, 0, 0, 0.3) 0px 0.5px 3px -1px;">Save for later</a>
                    </div>
                </div>
                <div class="position-relative ml-auto" style="width: 100px;">
                    <div class="input-group">
                        <input type="number" class="form-control" id="quantity_@cartItem.Product.Id" placeholder="Your Input" onchange="qunatityCheck(@cartItem.Product.Id, @cartItem.Product.Quantity, @cartItem.Product.Price)" style="width: calc(100% - 72px);" value="@cartItem.Quantity" />
                        <div class="input-group-append" style="width: 72px;">
                            <button class="btn btn-outline-secondary" type="button" onclick="decrementQuantity(@cartItem.Product.Id, @cartItem.Product.Quantity, @cartItem.Product.Price)">-</button>
                            <button class="btn btn-outline-secondary" type="button" onclick="incrementQuantity(@cartItem.Product.Id, @cartItem.Product.Quantity, @cartItem.Product.Price)">+</button>
                        </div>
                    </div>
                </div>
            </div>
        }

    </div>
</div>
</div>
<div style="margin-bottom: 60px;"></div>
<div style="height: 65px;" class="ps-3 pe-3 d-flex justify-content-between align-items-center border border-2 position-fixed bottom-0 w-100 bg-white">
    <div class="fw-bold fs-5">Total: <span id="totalPrice" style="color: #00796B">৳00.00</span></div>
    <a asp-area="Customer" asp-controller="Home" asp-action="ShowRoute" style="box-shadow: rgba(60, 64, 67, 0.3) 0px 1px 2px 0px, rgba(60, 64, 67, 0.15) 0px 1px 3px 1px;" class="fs-5 btn btn-primary rounded-pill ps-3 pe-3" id="checkoutBtn">Checkout</a>
</div>
<script>
    var productPrices = new Array();

    var route = document.getElementById("route");
    var totalPriceSpan = document.getElementById("totalPrice");
    var totalPrice = 0;
    function checkout() {
        route.style.display = "inline-block";
        map.invalidateSize(true);
    }
    function cross() {


        var userLat, userLng;
        let locations = new Array();
        let sortedLocations = new Array();
        var cartItems = @Html.Raw(Json.Serialize(Model));
        console.log(cartItems);
        var result;
        for (idx in cartItems) {
            //totalPrice += cartItems[idx]["product"]["price"];
            productPrices.push(cartItems[idx]["quantity"])
        }
        totalPriceSpan.innerHTML = "৳" + totalPrice + ".00";
        var routeLayer = null;





        function updateQuantity(itemId) {
            var quantity = document.getElementById('quantity_' + itemId).value;

            console.log("Item ID: " + itemId + ", New Quantity: " + quantity);
            $.ajax({
                type: "POST",
                url: "@Url.Action("UpdateCart")",
                dataType: "json",
                data: { ProductId: itemId, Quantity: quantity },
                success: function (result) {
                    console.log(result);

                },
                error: function (req, status, error) {
                    console.log(status);
                }
            });
        }

        function setPrice(itemId, price) {
            var priceSpan = document.getElementById('price_' + itemId);
            priceSpan.innerHTML = "৳" + price + ".00";
        }

        function qunatityCheck(itemId, available, price) {
            var quantity = document.getElementById('quantity_' + itemId);

            if (quantity.value > available) {
                quantity.value = available;

                setPrice(itemId, quantity.value * price)
            }
            else if (quantity.value < 1) {
                quantity.value = 1;
                setPrice(itemId, quantity.value * price)
            }

            updateQuantity(itemId);
        }

        function incrementQuantity(itemId, available, price) {
            var inputField = document.getElementById('quantity_' + itemId);
            var currentValue = parseInt(inputField.value);
            if (!isNaN(currentValue)) {
                if (currentValue < available) {
                    inputField.value = currentValue + 1;
                    totalPrice += price;
                    setPrice(itemId, inputField.value * price)
                    updateQuantity(itemId);
                }

            } else {
                inputField.value = 1; // Set default value if current value is NaN or empty
                setPrice(itemId, inputField.value * price)
                updateQuantity(itemId);
            }
        }

        function decrementQuantity(itemId, available, price) {
            var inputField = document.getElementById('quantity_' + itemId);
            var currentValue = parseInt(inputField.value);
            if (!isNaN(currentValue) && currentValue > 1) {
                if (currentValue > 1) {
                    inputField.value = currentValue - 1;
                    totalPrice -= price;
                    setPrice(itemId, inputField.value * price)

                    updateQuantity(itemId);
                }

            } else {
                inputField.value = 1; // Set default value if current value is NaN, empty, or less than 1
                setPrice(itemId, inputField.value * price)
                updateQuantity(itemId);
            }
        }

        var cartQuantityMap = {};

        function updateCartQuantity(productId, quantity) {
            cartQuantityMap[productId] = quantity;
        }

        function getPreviousCartQuantity(productId) {
            return cartQuantityMap[productId] || 0;
        }



</script>

